import{j as r,F as n,a as e}from"./renderer/_default.page.client.jsx.5fe36631.js";function i(){return r(n,{children:[e("h1",{children:"Type-Error"}),"The React function CounterInc() resides in pages/index/CounterInc.jsx.",e("br",{}),e("br",{}),"The type checking function PRE_CounterInc() is in typeCzechFunctions.js.",e("br",{}),e("br",{}),e("br",{}),'The CounterInc() button is created in pages/index/index.page.jsx with an incorrect initial string value of "1".',e("br",{}),e("pre",{children:'<CounterInc init_count = { "1" } />'}),"Which results in \xA0",e("button",{type:"botton",disabled:!0,children:"Counter_inc 11111"}),'\xA0 when clicked because "1"+"1" = "11".',e("br",{}),e("br",{}),e("br",{}),"The CounterInc() button should have been created with a correct initial number value of 1 without any quotes.",e("pre",{children:"<CounterInc init_count = { 1 } />"}),"Which results in \xA0",e("button",{type:"botton",disabled:!0,children:"Counter_inc 8"}),"\xA0 when clicked because 7 + 1 = 8.",e("br",{}),e("br",{}),e("br",{}),'If this program was launched via "npm run prod" then type errors are not checked for nor logged.',e("br",{}),e("br",{}),'But if the program was launched via "npm run dev" then both NodeJs and the browser console show type errors.',e("br",{}),e("br",{}),'The type error is that a string of "1" is used instead of the proper number of 1 for counting clicks.',e("br",{}),e("br",{}),e("br",{}),"Node.js Runtime Type Error",r("pre",{children:["\xA0MESSAGE Property 'init_count' is indicated to be a 'number', but is inaccurately a 'string' : 1",e("br",{}),'\xA0        Node.js : PRE_CounterInc :{"init_count":"number"}',e("br",{}),"\xA0        CHECKER check_assert()",e("br",{}),"\xA0    ACTUAL TYPE 'string'",e("br",{}),'\xA0         VALUES ""',e("br",{}),"\xA0         ORIGIN",e("br",{})]}),e("br",{}),"Broswer Runtime Type Error in Console",r("pre",{children:["\xA0PRE_CounterInc() PRE-FUNC: Property 'init_count' is indicated to be a 'number', but is inaccurately a 'string' : 1 ",e("br",{}),"\xA0         CHECKER checkParam_typeExtra()",e("br",{}),"\xA0     ACTUAL TYPE ['object','object']",e("br",{}),'\xA0          VALUES {init_count:"1"}, {}',e("br",{}),'\xA0   EXPECTED TYPE [{"init_count":"number"}, "object"]',e("br",{}),"\xA0          ORIGIN CounterInc(Counter_props, _react_1_browser_nodejs, _react_2_only_nodejs)",e("br",{})]})]})}export{i as Page};
